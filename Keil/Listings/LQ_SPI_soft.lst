C251 COMPILER V5.60.0,  LQ_SPI_soft                                                        27/05/24  09:23:06  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE LQ_SPI_soft
OBJECT MODULE PLACED IN .\Objects\LQ_SPI_soft.obj
COMPILER INVOKED BY: E:\_app\Keil5\C251\BIN\C251.EXE LQ_lib\driver\LQ_SPI_soft.c XSMALL INTR2 BROWSE INCDIR(.\user;.\LQ_
                    -lib\app;.\LQ_lib\ddc;.\LQ_lib\driver) DEBUG PRINT(.\Listings\LQ_SPI_soft.lst) OBJECT(.\Objects\LQ_SPI_soft.obj) 

stmt  level    source

    1          /*LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
    2           【平    台】北京龙邱智能科技STC32G12K128 LQFP64核心板
    3           【编    写】chiusir
    4           【E-mail  】chiusir@163.com
    5           【软件版本】V1.1 版权所有，单位使用请先联系授权
    6           【最后更新】2022年3月8日
    7           【相关信息参考下列地址】
    8           【网    站】http://www.lqist.cn
    9           【淘宝店铺】http://longqiu.taobao.com
   10           ------------------------------------------------
   11           【IDE】STC32
   12           【Target 】 keil5.2及以上
   13           【SYS PLL】 35MHz使用内部晶振，通过
   14          =================================================================
   15          stc-isp下载时, 选择时钟 35MHZ
   16          QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ*/
   17          
   18          
   19          #include "include.h"
   20          
   21          
   22          /*************************************************************************
   23          *  函数名称：void SPI_SoftReadWriteNbyte(u8 *lqbuff, u16 len)
   24          *  功能说明：SPI读写数据及长度
   25          *  参数说明：u8 *buf数据指针,u16 len长度
   26          *  函数返回：
   27          *  修改时间：2020年8月10日
   28          *  备    注：   
   29          *************************************************************************/
   30          void Soft_SPI_ReadWriteNbyte(u8 *lqbuff, u16 len)
   31          {
   32   1              u8 i;
   33   1              
   34   1          SPI_CS = 0;
   35   1          SPI_SCK= 1;
   36   1          do
   37   1          {
   38   2              for(i = 0; i < 8; i++)
   39   2              {   
   40   3                  SPI_MOSI = ((*lqbuff) >= 0x80);
   41   3                  SPI_SCK= 0;
   42   3                  (*lqbuff) = (*lqbuff)<<1;      
   43   3      
   44   3                  SPI_SCK= 1;
   45   3      
   46   3                  (*lqbuff) |= SPI_MISO;          
   47   3              }
   48   2          lqbuff++;
   49   2        }while(--len);
   50   1        SPI_CS = 1;
   51   1      }
   52          
   53          /*************************************************************************
   54          *  函数名称：void SPI_SoftInit(void)
   55          *  功能说明：模拟SPI口初始化
   56          *  参数说明：无
   57          *  函数返回：无
   58          *  修改时间：2020年8月10日
C251 COMPILER V5.60.0,  LQ_SPI_soft                                                        27/05/24  09:23:06  PAGE 2   

   59          *  备    注：   
   60          *************************************************************************/
   61          void Soft_SPI_Init(void)
   62          {
   63   1      
   64   1              P2M1 = 0;   P2M0 = 0;   //设置为准双向口
   65   1      //      P2PU =0x3C;          //上拉
   66   1      }
   67          
   68          /*LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
   69          @函数名称：void LQ_SPI_Read(unsigned char reg, unsigned short len, unsigned char* buf)
   70          @功能说明：SPI从设备读取数据
   71          @参数说明：unsigned char reg,设备起始地址unsigned char* buf,数据存放地址unsigned short len,待写入的数据长
             -度
   72          @函数返回：无
   73          @修改时间：2022/02/24
   74          @调用方法：SPI_Read_Nbytes(SPI1,reg|0x80,buf,len);
   75          @备    注：无
   76          QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ*/
   77          void LQ_SPI_Read(unsigned char reg, unsigned short len, unsigned char* buf)
   78          {  
   79   1          unsigned short i;
   80   1          unsigned char buff[32];
   81   1          buff[0] = reg | 0x80;  
   82   1              
   83   1          Soft_SPI_ReadWriteNbyte(buff, len+1); 
   84   1          for(i=0;i<len;i++)
   85   1              buf[i]=buff[i+1];
   86   1      }
   87          /*LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
   88          @函数名称：void LQ_SPI_Write(unsigned char reg, unsigned short len, unsigned char* buf)
   89          @功能说明：SPI向设备写入数据
   90          @参数说明：unsigned char reg,设备起始地址unsigned char* buf,数据存放地址unsigned short len,待写入的数据长
             -度
   91          @函数返回：无
   92          @修改时间：2022/02/24
   93          @调用方法：无
   94          @备    注：无
   95          QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ*/
   96          void LQ_SPI_Write(unsigned char reg, unsigned char value)
   97          {
   98   1          unsigned char buff[2];
   99   1      
  100   1          buff[0] = reg & 0x7f;          //先发送寄存器
  101   1          buff[1] = value;        //再发送数据
  102   1          Soft_SPI_ReadWriteNbyte(buff, 2);
  103   1      }
  104          unsigned char LQ_SPI_LSM60DSR_GetID(unsigned char reg)
  105          {
  106   1      
  107   1          unsigned char ID[1];
  108   1          LQ_SPI_Read(reg, 1, ID);
  109   1          return ID[0];
  110   1      
  111   1      }
  112          void LQ_SPI_LSM60DSR_Init(void)
  113          {
  114   1          //加速度计52HZ（倾斜角检测功能工作在26HZ，因此加速度计ODR必须设置为>=26hz）,2g量程。
  115   1          LQ_SPI_Write(LSM6DSR_CTRL1_XL,0X20);
  116   1          //使能加速度计x,y,z轴
  117   1          LQ_SPI_Write(LSM6DSR_CTRL9_XL,0X38);
  118   1          //陀螺仪电平触发，加速度计高性能使能
  119   1          LQ_SPI_Write(LSM6DSR_CTRL6_C,0X40|0x10);
  120   1          //陀螺仪高性能使能
  121   1          LQ_SPI_Write(LSM6DSR_CTRL7_G,0X80);
  122   1          //加速度计INT2引脚失能,陀螺仪数据INT2使能
C251 COMPILER V5.60.0,  LQ_SPI_soft                                                        27/05/24  09:23:06  PAGE 3   

  123   1          LQ_SPI_Write(LSM6DSR_INT2_CTRL,0X03);
  124   1          //陀螺仪12.5hz  2000dps
  125   1          LQ_SPI_Write(LSM6DSR_CTRL2_G,0X1C);
  126   1          //使能陀螺仪x,y,z轴
  127   1          LQ_SPI_Write(LSM6DSR_CTRL10_C,0X38);
  128   1      }
  129          void LQ_SPI_LSM60DSR_Read(signed short *ax,signed short *ay,signed short *az,signed short *gx,signed shor
             -t *gy,signed short *gz)
  130          {
  131   1          unsigned char buf[12];
  132   1      
  133   1          LQ_SPI_Read(LSM6DSR_OUTX_L_GYRO, 12, buf);
  134   1      
  135   1          *ax=((uint16)buf[1]<<8)|buf[0];
  136   1          *ay=((uint16)buf[3]<<8)|buf[2];
  137   1          *az=((uint16)buf[5]<<8)|buf[4];
  138   1          *gx=((uint16)buf[7]<<8)|buf[6];
  139   1          *gy=((uint16)buf[9]<<8)|buf[8];
  140   1          *gz=((uint16)buf[11]<<8)|buf[10];
  141   1      }
  142          /**
  143            * @brief    LQLSM6DSRSPI测试函数
  144            *
  145            * @param    
  146            *
  147            * @return   无
  148            *
  149            * @note     无
  150            *
  151            * @see      Test_SPI_LQLSM6DSR(void));
  152            * @see      
  153            *
  154            * @date     2023/4/10 星期一
  155            */
  156          void Test_SPI_LQLSM6DSR(void)
  157          {
  158   1          signed short accelerat_X, accelerat_Y, accelerat_Z;
  159   1          signed short gyro_X, gyro_Y, gyro_Z;
  160   1          unsigned char res;
  161   1          char  txt[30];
  162   1      
  163   1          Soft_SPI_Init();
  164   1      
  165   1                      delayms(500);
  166   1      
  167   1          OLED_Init();                //LCD初始化
  168   1          
  169   1          OLED_CLS();                 //LCD清屏
  170   1      
  171   1          /*读取设备ID*/
  172   1      
  173   1          res = LQ_SPI_LSM60DSR_GetID(WHO_AM_LSM6D);
  174   1      
  175   1                      OLED_P14x16Str(8,0,(unsigned char*)"北京龙邱智能科技");         //字符串显示
  176   1                      sprintf(txt,"ID:0X%2x",res);
  177   1                      OLED_P6x8Str(70,2,txt);     //字符串显示 
  178   1              
  179   1              LQ_SPI_LSM60DSR_Init();
  180   1                      while(1)
  181   1                      {
  182   2                              LQ_SPI_LSM60DSR_Read(&accelerat_X, &accelerat_Y, &accelerat_Z, &gyro_X, &gyro_Y, &gyro_Z);
  183   2                              
  184   2                              sprintf((char*)txt,"ax:%06d",accelerat_X);
  185   2                  OLED_P6x8Str(0,2,txt);
  186   2                  sprintf((char*)txt,"ay:%06d",accelerat_Y);
  187   2                  OLED_P6x8Str(0,3,txt);
C251 COMPILER V5.60.0,  LQ_SPI_soft                                                        27/05/24  09:23:06  PAGE 4   

  188   2                  sprintf((char*)txt,"az:%06d",accelerat_Z);
  189   2                  OLED_P6x8Str(0,4,txt);
  190   2                  sprintf((char*)txt,"gx:%06d",gyro_X);
  191   2                  OLED_P6x8Str(0,5,txt);
  192   2                  sprintf((char*)txt,"gy:%06d",gyro_Y);
  193   2                  OLED_P6x8Str(0,6,txt);
  194   2                  sprintf((char*)txt,"gz:%06d",gyro_Z);
  195   2                  OLED_P6x8Str(0,7,txt);
  196   2                               delayms(20);
  197   2                      }
  198   1      }
  199          
  200          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       699     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------        111
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        74     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
